#!/bin/bash
# Script that sets up the developer environment
# Copyright (C) 2015 Minca Daniel Andrei - All Rights Reserved
# Permission to copy and modify is granted under the GPL V2 license
set -euo pipefail

VIM_PATH="$HOME/.vim/"
DOWNLOADS_DIR="$HOME/Downloads"
REPO_PATH="$DOWNLOADS_DIR/dotfiles"
DOTFILES_PATH="$REPO_PATH/dotfiles"
DROPBOX_VERSION="dropbox_2015.10.28_amd64.deb"

# --------- Helper Functions ------------
# ---- COLORS ----
# Example usage format:
# printf "$COLOR" "text"
light_blue='\e[1;94m%s\e[0m\n'
light_red='\e[1;91m%s\e[0m\n'
light_green='\e[1;92m%s\e[0m\n'
light_cyan='\e[1;96m%s\e[0m\n'
dark_gray='\e[1;100m%s\e[0m\n'

# -- endcolors --

breakline() {
  TXT="----| ${1} |----"
  TXT_LENGTH=$(expr length "${TXT}")
  NL=$'\n'
  printf "$light_cyan" "${NL}${TXT}${NL}"
}

display_usage() {
  printf "$dark_gray" "Usage: $0 [options]

  Options:
  init             main initializer command
  installPkgs      install binaries
  installDocker    install Docker containers
  installVim       install Vim plugins and mkdirs
  installTask      install Task Warrior for CLI
  installDotfiles  pull & move dotfiles to home dir
  installChrome    install Google Chrome stable
  installFont      fetch & install the Hack font for coding
  installDropbox   fetch & install Dropbox to sync files
  installSublime   fetch,patch & install Sublime Text 3
  installNode      fetch & install NodeJS
  installZsh       install zshell (oh-my-zsh)

  Optional:
  themeNumix       Material Design icon theme for Unix
  themePaper       Paper Material design theme for Unix"

}

if [  "$#" -lt 1  ]
then
  display_usage
  exit 0
fi
# ---- end helper func. -------------------

# Install libraries
installPkgs() {
  sudo add-apt-repository -y ppa:git-core/ppa

	sudo apt-get update

	sudo apt-get install -y vim \
												  tmux \
                          git \
												  openvpn \
												  openssh-server \
												  task \
												  cmake \
												  curl \
												  keepass2 \
												  xdotool \
												  xclip \
												  python-gpgme \
												  gnome-disk-utility \
                          unrar \
                          postgresql \
                          postgresql-contrib \
                          nodejs \
                          npm \
                          tree \
                          audacious \
                          silversearcher-ag \
                          gnupg-agent \
                          enigmail \
                          secure-delete \
                          clamav \
                          lnav \
                          dtrx \
                          zsh \
                          python-pip \
                          python-dev \
                          build-essential

  sudo pip install --upgrade pip
  sudo pip install --upgrade virtualenv
}

installAnsible() {
  sudo apt-add-repository -y ppa:ansible/ansible
  sudo apt-get update && sudo apt-get install -y ansible
}

# setup docker
installDocker() {

	breakline "Installing Docker"
		
	# Install  docker
	curl -sSL https://get.docker.com/ | sh
	sudo usermod -aG docker $USER


	# Install docker-compose
	sudo chown -R $(whoami) /usr/local/bin
	curl -L https://github.com/docker/compose/releases/download/1.4.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
	chmod +x /usr/local/bin/docker-compose
}

installVim() {
  breakline "Creating vim paths"

	mkdir -p $VIM_PATH/autoload \
					 $VIM_PATH/bundle \
					 $VIM_PATH/snippets \
					 $HOME/vimBackups
					 
  breakline "Pulling VIM repositories"

	# Pathogen
	curl -LSso $VIM_PATH/autoload/pathogen.vim https://tpo.pe/pathogen.vim
	
	# NerdTree
	git clone https://github.com/scrooloose/nerdtree.git $VIM_PATH/bundle/nerdtree.vim
	
	# SnipMate
	git clone https://github.com/tomtom/tlib_vim.git $VIM_PATH/bundle/tlib_vim
	git clone https://github.com/MarcWeber/vim-addon-mw-utils.git $VIM_PATH/bundle/vim-addon-mw-utils
	git clone https://github.com/garbas/vim-snipmate.git $VIM_PATH/bundle/vim-snipmate
	
	# CtrlP
	git clone https://github.com/kien/ctrlp.vim.git $VIM_PATH/bundle/ctrlp.vim
	
	# CtrlSF
	git clone https://github.com/dyng/ctrlsf.vim.git $VIM_PATH/bundle/ctrlsf.vim
}

installTask() {
  breakline "Installing tasksh by taskwarrior"

  wget http://taskwarrior.org/download/tasksh-latest.tar.gz --directory-prefix=$DOWNLOADS_DIR

  cd $DOWNLOADS_DIR

  tar xvf tasksh-latest.tar.gz

  cd tasksh-*

  cmake -DCMAKE_BUILD_TYPE=release .

  sleep 2

  make

  sudo make install

  cd $HOME
}

installDotfiles() {
  breakline "Copying and configuring dotfiles"

	git clone https://github.com/dminca/dotfiles.git $DOWNLOADS_DIR/dotfiles

  cp -fv $DOTFILES_PATH/.vimrc \
     $DOTFILES_PATH/.taskrc \
     $DOTFILES_PATH/.bashrc \
     $DOTFILES_PATH/.tmux.conf \
     $DOTFILES_PATH/.bash_aliases \
     $DOTFILES_PATH/.gemrc $HOME/

  cp -Rv $REPO_PATH/snippets/* $HOME/.vim/snippets/

}

installChrome() {

	breakline "Installing Google Chrome"

	# Install dependencies
	sudo apt-get -y install \
		libxss1 \
		libappindicator1 \
		libindicator7

	# Fetch the Chrome acrhive
	sudo wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

	# Install Chrome
	sudo dpkg -i google-chrome*.deb

	# Cleanup
	sudo rm -f google-chrome-stable_current_amd64.deb

}

installRvm() {
  breakline "Installing RVM"

  echo -e "\e[1m\e[33m[Deprecated] \e[0mRVM installation will be replaced with Docker container environment"
}

installFont() {
  breakline "Pulling the Hack font"

  mkdir -p $HOME/.fonts/truetype
  wget -P $HOME/.fonts/truetype https://github.com/chrissimpkins/Hack/releases/download/v2.018/Hack-v2_018-ttf.zip
  unzip $HOME/.fonts/truetype/Hack-v2_018-ttf.zip -d $HOME/.fonts/truetype/

}

installDropbox() {
  breakline "Installing Dropbox"

  wget -P $DOWNLOADS_DIR https://linux.dropbox.com/packages/ubuntu/$DROPBOX_VERSION

  sudo dpkg -i $DOWNLOADS_DIR/$DROPBOX_VERSION

}

installVirtualbox() {
  echo -e "\e[95m[Work in Progress] \e[39mVirtualBox installation should be here..."
}

installSublime() {
  breakline "Installing Sublime Text 3 build 3065"

  wget -P $DOWNLOADS_DIR http://c758482.r82.cf2.rackcdn.com/sublime-text_build-3065_amd64.deb

  sudo dpkg -i $DOWNLOADS_DIR/sublime-text_build-3065_amd64.deb

  wget -P $DOWNLOADS_DIR -O $DOWNLOADS_DIR/sublime_text http://cl.ly/1z0S25150Y0I/sublime_text%20crack%20linux%2064%20build%203065

  chmod u+x $DOWNLOADS_DIR/sublime_text

  sudo mv -v $DOWNLOADS_DIR/sublime_text /opt/sublime_text/

}

installNode() {
  breakline "Installing Node (latest)"

  wget -P $DOWNLOADS_DIR https://nodejs.org/dist/v5.1.0/node-v5.1.0-linux-x64.tar.gz

  tar xvf $DOWNLOADS_DIR/node-v5.1.0-linux-x64.tar.gz

  sudo cp -vr $DOWNLOADS_DIR/node-v5.1.0-linux-x64/* /usr/local/

  # TODO: call the function to check whether the install was a success
  # or not. If successful show message, else show error.


}

installZsh() {
  curl -L http://install.ohmyz.sh > $HOME/Downloads/install.sh

  sh $HOME/Downloads/install.sh
}

# extra packages for design
themePaper() {
  breakline "Installing Paper theme and Icon pack"

  sudo add-apt-repository -y ppa:snwh/pulp

  sudo apt-get update

  sudo apt-get install -y paper-gtk-theme paper-icon-theme
}

themeNumix() {
  breakline "Installing Numix themne and Icon pack"

  sudo apt-add-repository -y ppa:numix/ppa

  sudo apt-get update

  sudo apt-get install -y numix-icon-theme numix-icon-theme-circle
}


clearInstall() {
  breakline "Cleaning after installation"

  rm -rfv $REPO_PATH \
         $DOWNLOADS_DIR/tasksh-* \
         $HOME/.fonts/truetype/Hack-v2_018-ttf.zip \
         $DOWNLOADS_DIR/$DROPBOX_VERSION


  cd $HOME
}

selectiveInstall() {
  whiptail --title "Package chooser" --checklist --separate-output \
    "What packages do you wish to install?" 20 78 15 \
    "bins" "Install binaries" on \
    "docker" "Install Docker tools" off \
    "ansible" "Install Ansible for DevOps" off \
    "vim" "Pull vim plugins and .vimrc" off \
    "tasker" "Install tasksh by TaskWarrior" off \
    "dotfiles" "Pull the dotfiles and set them up" off \
    "chrome" "Just install the Chrome browser" off \
    "font" "Install the Hack font for terminal" off \
    "dropbox" "Install Dropbox file sync" off \
    "sublime" "Install Sublime Text 3 Full" off \
    "nodeJS" "Fetch & install NodeJS" off \
    "zsh" "Another Bash for your terminal" off \
    "numix" "Material Design icon theme for Unix" off \
    "paper" "Paper Material Design theme for Unix" off 2>results

  while read choice
  do
    case $choice in
      bins)
        installPkgs
        ;;
      docker)
        installDocker
        ;;
      ansible)
        installAnsible
        ;;
      vim)
        installVim
        ;;
      tasker)
        installTask
        ;;
      dotfiles)
        installDotfiles
        ;;
      chrome)
        installChrome
        ;;
      font)
        installFont
        ;;
      dropbox)
        installDropbox
        ;;

}

if [  "$#" -lt 1  ]
then
  selectiveInstall
  exit 0
fi

"$@"
